name: Delivery

on:
  push:
    branches: ["master"]
    paths: [".github/workflows/**", "dev/**"]

jobs:

  #------#
  # INIT #
  #------#

  get-apps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - name: Get applications list
        id: get-apps
        run: echo "apps=[$(find dev -name 'Dockerfile' -type f | awk -v ORS='","' -F/ '{print $2"/"$3}' | sed 's/^/\"/' | sed 's/,"$//')]" >> $GITHUB_OUTPUT
    outputs:
      apps: ${{ steps.get-apps.outputs.apps }}

  #-----------------------------------#
  # DEV: Build and push docker images #
  #-----------------------------------#

  docker-push:
    runs-on: ubuntu-latest
    needs: get-apps

    strategy:
      matrix:
        application: ${{ fromJson(needs.get-apps.outputs.apps) }}
    
    steps:
      - uses: actions/checkout@v3
        name: Checkout source code
      
      - uses: docker/setup-qemu-action@v2
        name: Set up QEMU

      - uses: docker/setup-buildx-action@v2
        name: Set up Docker Buildx

      - uses: docker/login-action@v2
        name: Login to Docker Hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get image name with tag
        id: vars
        run: echo "image=$(echo '${{ matrix.application }}' | sed 's/\//-/g'):$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: dorny/paths-filter@v2
        name: Get changed dirs
        id: filter
        with:
          filters: |
            utils:
              - dev/_utils/**
            app: 
              - dev/${{ matrix.application }}/**

      # Build and push image only if _utils or app dir has changed
      - uses: docker/build-push-action@v4
        name: Build
        if: ${{ (steps.filter.outputs.utils == 'true') || (steps.filter.outputs.app == 'true') }}
        with:
          file: dev/${{ matrix.application }}/Dockerfile
          context: dev
          push: true
          tags: adiffhunting/${{ steps.vars.outputs.image }}

  #-----------------------------------#
  # OPS: Update live environment code #
  #-----------------------------------#

  update-live:
    runs-on: ubuntu-latest
    needs: [get-apps, docker-push]

    strategy:
      matrix:
        application: ${{ fromJson(needs.get-apps.outputs.apps) }}

    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - name: Get image name with tag
        id: vars
        run: echo "image=$(echo '${{ matrix.application }}' | sed 's/\//-/g'):$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: dorny/paths-filter@v2
        name: Get changed dirs
        id: filter
        with:
          filters: |
            utils:
              - dev/_utils/**
            app: 
              - dev/${{ matrix.application }}/**
      
      # Update image tag only if _utils or app dir has changed
      - name: Update deployment tag
        if: ${{ (steps.filter.outputs.utils == 'true') || (steps.filter.outputs.app == 'true') }}
        working-directory: ops/live
        env:
          IMAGE: ${{ steps.vars.outputs.image }}
        run: |
          find . -name '*.yaml' -type f -exec sed -i "s/image: adiffhunting\/$(echo $IMAGE | awk -F: '{print $1}')\:.*$/image\: adiffhunting\/$IMAGE/g" {} \;

      # Commit and push only if _utils or app dir has changed
      - uses: nick-fields/retry@v2
        name: Commit and push changes
        if: ${{ (steps.filter.outputs.utils == 'true') || (steps.filter.outputs.app == 'true') }}
        env:
          IMAGE: ${{ steps.vars.outputs.image }}
        with:
          max_attempts: 10
          retry_on: error
          timeout_seconds: 5
          command: |
            git config --global user.name "GitHub Action"
            git config --global user.email "action@github.com"
            git stash
            git fetch --all
            git rebase origin/master
            git stash pop
            git add -A
            git commit -m "{ops} Bump to image $IMAGE"
            git push
