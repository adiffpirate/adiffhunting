version: "3.8"
services:

  dgraph-zero:
    image: dgraph/dgraph:v23.1.0
    command: dgraph zero --my=dgraph-zero:5080
    expose:
      - "5080"
      - "6080"
    volumes:
      - db-data:/dgraph
    restart: unless-stopped

  dgraph-alpha:
    image: dgraph/dgraph:v23.1.0
    command: dgraph alpha --my=dgraph-alpha:7080 --zero=dgraph-zero:5080 --security whitelist=0.0.0.0/0
    ports:
      - 8080:8080
    volumes:
      - db-data:/dgraph
    restart: on-failure

  dgraph-ratel:
    image: dgraph/ratel:v21.12.0
    ports:
      - 8000:8000
    restart: unless-stopped

  dgraph-init:
    build:
      dockerfile: dgraph-init/Dockerfile
      context: . # dev dir (needed to copy _utils)
    environment:
      - DEBUG=$DEBUG
      - DGRAPH_ALPHA_HOST=dgraph-alpha
      - DGRAPH_ALPHA_HTTP_PORT=8080
    volumes:
      - ./dgraph-init/test_data:/src/data

  subenum-passive:
    build:
      dockerfile: subenum-passive/Dockerfile
      context: . # dev dir (needed to copy _utils)
    environment:
      - DEBUG=$DEBUG
      - DGRAPH_ALPHA_HOST=dgraph-alpha
      - DGRAPH_ALPHA_HTTP_PORT=8080
      - CHAOS_KEY=$CHAOS_KEY
    restart: unless-stopped

  subprobe:
    build:
      dockerfile: subprobe/Dockerfile
      context: . # dev dir (needed to copy _utils)
    environment:
      - DEBUG=$DEBUG
      - DGRAPH_ALPHA_HOST=dgraph-alpha
      - DGRAPH_ALPHA_HTTP_PORT=8080
    restart: unless-stopped

  subtko:
    build:
      dockerfile: subtko/Dockerfile
      context: . # dev dir (needed to copy _utils)
    environment:
      - DEBUG=$DEBUG
      - DGRAPH_ALPHA_HOST=dgraph-alpha
      - DGRAPH_ALPHA_HTTP_PORT=8080
      - DOMAIN_SCAN_COOLDOWN=30 seconds
    restart: unless-stopped

volumes:
  db-data: {}
